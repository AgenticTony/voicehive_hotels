name: IaC Deploy

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main", "develop" ]
    paths: [ "infra/**" ]

  push:
    branches: [ "main", "develop" ]
    tags: [ "v*", "release-*" ]
    paths: [ "infra/**" ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # required for OIDC
      contents: read
      pull-requests: write
    env:
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}   # <-- important
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS creds via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_IAC_ROLE_ARN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra/terraform
        run: terraform init -upgrade

      - name: Terraform Plan (save plan + human-readable text)
        working-directory: infra/terraform
        run: |
          terraform plan -out=tfplan
          terraform show -no-color tfplan > plan.txt

      - name: Read plan.txt
        id: plantext
        working-directory: infra/terraform
        run: |
          CONTENT="$(sed -e 's/`/`/g' plan.txt | sed -e 's/%/%25/g' -e 's/\n/%0A/g' -e 's/\r/%0D/g')"
          echo "content=$CONTENT" >> "$GITHUB_OUTPUT"

      - name: Comment Plan (PRs only)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          message: |
            #### Terraform plan
            ```
            ${{ steps.plantext.outputs.content }}
            ```

      - name: Terraform Apply (only on push)
        if: github.event_name == 'push'
        working-directory: infra/terraform
        run: terraform apply -auto-approve tfplan
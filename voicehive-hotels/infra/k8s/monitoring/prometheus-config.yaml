apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'voicehive-prod'
        region: 'eu-west-1'
    
    # Alerting configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093
    
    # Load rules once and periodically evaluate them
    rule_files:
      - /etc/prometheus/rules/*.yml
    
    # Scrape configurations
    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      # VoiceHive Orchestrator metrics
      - job_name: 'orchestrator'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - voicehive
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: orchestrator
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '(http_requests_total|http_request_duration_seconds|connector_.*|pms_.*|active_calls|calls_total)'
            action: keep
      
      # PMS Connectors metrics
      - job_name: 'connectors'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - voicehive
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_component]
            action: keep
            regex: connector
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
      
      # LiveKit metrics
      - job_name: 'livekit'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - voicehive
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: livekit
      
      # Kubernetes metrics
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      # Node exporter for infrastructure metrics
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):10250'
            replacement: '${1}:9100'
            target_label: __address__
      
      # HashiCorp Vault metrics
      - job_name: 'vault'
        metrics_path: '/v1/sys/metrics'
        params:
          format: ['prometheus']
        scheme: https
        tls_config:
          insecure_skip_verify: true
        static_configs:
          - targets: ['vault.vault.svc.cluster.local:8200']
        bearer_token_file: /vault/token
      
      # Redis metrics via exporter
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'redis_(connected_clients|used_memory_bytes|commands_processed_total|rejected_connections_total)'
            action: keep
      
      # PostgreSQL metrics via exporter  
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-exporter:9187']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'pg_(up|database_size_bytes|stat_user_tables_.*|replication_lag)'
            action: keep

# ExternalSecrets for VoiceHive Hotels API Keys
# These use HashiCorp Vault as the secret backend

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: voicehive-vault
spec:
  provider:
    vault:
      server: "https://vault.voicehive-hotels.eu"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "voicehive-external-secrets"
          serviceAccountRef:
            name: "external-secrets-sa"
---
# LiveKit API Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-livekit-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-livekit-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        api-key: "{{ .livekit_api_key | toString }}"
        api-secret: "{{ .livekit_api_secret | toString }}"
  data:
  - secretKey: livekit_api_key
    remoteRef:
      key: "voicehive/livekit"
      property: "api_key"
  - secretKey: livekit_api_secret
    remoteRef:
      key: "voicehive/livekit"
      property: "api_secret"
---
# TTS Service API Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-tts-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-tts-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        elevenlabs-api-key: "{{ .elevenlabs_api_key | toString }}"
        azure-speech-key: "{{ .azure_speech_key | toString }}"
  data:
  - secretKey: elevenlabs_api_key
    remoteRef:
      key: "voicehive/elevenlabs"
      property: "api_key"
  - secretKey: azure_speech_key
    remoteRef:
      key: "voicehive/azure_speech"
      property: "subscription_key"
---
# Azure OpenAI Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-azure-openai-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-azure-openai-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        api-key: "{{ .azure_openai_key | toString }}"
        endpoint: "{{ .azure_openai_endpoint | toString }}"
        deployment-name: "{{ .azure_openai_deployment | toString }}"
  data:
  - secretKey: azure_openai_key
    remoteRef:
      key: "voicehive/azure_openai"
      property: "api_key"
  - secretKey: azure_openai_endpoint
    remoteRef:
      key: "voicehive/azure_openai"
      property: "endpoint"
  - secretKey: azure_openai_deployment
    remoteRef:
      key: "voicehive/azure_openai"
      property: "deployment_name"
---
# NVIDIA Riva API Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-riva-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-riva-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        api-key: "{{ .riva_api_key | toString }}"
  data:
  - secretKey: riva_api_key
    remoteRef:
      key: "voicehive/nvidia_riva"
      property: "api_key"
---
# Orchestrator Webhook Authentication
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-orchestrator-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-orchestrator-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        webhook-token: "{{ .webhook_auth_token | toString }}"
  data:
  - secretKey: webhook_auth_token
    remoteRef:
      key: "voicehive/orchestrator"
      property: "webhook_auth_token"
---
# Core Infrastructure Secrets (Redis, Database)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        redis-url: "{{ .redis_url | toString }}"
        database-url: "{{ .database_url | toString }}"
        vault-token: "{{ .vault_token | toString }}"
  data:
  - secretKey: redis_url
    remoteRef:
      key: "voicehive/infrastructure"
      property: "redis_connection_string"
  - secretKey: database_url
    remoteRef:
      key: "voicehive/infrastructure"
      property: "postgres_connection_string"
  - secretKey: vault_token
    remoteRef:
      key: "voicehive/infrastructure"
      property: "vault_token"
---
# PMS Connector Secrets (for partner integrations)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: voicehive-pms-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: voicehive-vault
    kind: SecretStore
  target:
    name: voicehive-pms-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        apaleo-client-id: "{{ .apaleo_client_id | toString }}"
        apaleo-client-secret: "{{ .apaleo_client_secret | toString }}"
        mews-client-token: "{{ .mews_client_token | toString }}"
        opera-api-key: "{{ .opera_api_key | toString }}"
  dataFrom:
  - extract:
      key: "voicehive/pms_connectors"

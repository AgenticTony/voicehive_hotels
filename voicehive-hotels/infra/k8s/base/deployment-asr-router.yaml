apiVersion: apps/v1
kind: Deployment
metadata:
  name: asr-router
  labels:
    app: asr-router
    component: asr
    tier: router
spec:
  replicas: 3
  selector:
    matchLabels:
      app: asr-router
  template:
    metadata:
      labels:
        app: asr-router
        version: blue
        tier: router
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: voicehive-asr-router
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - asr-router
              topologyKey: kubernetes.io/hostname
      containers:
      - name: asr-router
        image: voicehive/asr-router:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 51050
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: AWS_REGION
          value: "eu-west-1"
        - name: GRANARY_SERVICE_URL
          value: "http://granary-asr-proxy:51052"
        - name: WHISPER_SERVICE_URL
          value: "http://whisper-asr-proxy:51053"
        - name: RIVA_SERVICE_URL
          value: "http://riva-asr-proxy:51051"
        - name: ASR_REQUEST_TIMEOUT
          value: "45"  # Longer timeout for Granary model processing
        - name: ASR_FALLBACK_ENABLED
          value: "true"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /.cache
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: asr-router
  labels:
    app: asr-router
    tier: router
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: asr-router
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: voicehive-asr-router
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/voicehive-asr-router
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: asr-router-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: asr-router
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Pods
    pods:
      metric:
        name: asr_router_requests_total
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
---
# Ingress configuration for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asr-router-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"  # Large audio files
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - asr.voicehive.com
    secretName: asr-router-tls
  rules:
  - host: asr.voicehive.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asr-router
            port:
              number: 80
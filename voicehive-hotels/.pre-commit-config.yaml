repos:
  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=100]

  # Python imports sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix]

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-ll, -r, services/, connectors/]
        exclude: tests/

  # Dependency vulnerability scanning
  - repo: https://github.com/pyupio/safety
    rev: 3.0.1
    hooks:
      - id: safety
        args: [--short-report, --ignore=70612] # Ignore specific non-critical issues if needed
        files: requirements.*\.txt$

  # Alternative dependency scanner
  - repo: https://github.com/pypa/pip-audit
    rev: v2.6.1
    hooks:
      - id: pip-audit
        args: [--desc, --format=text]
        files: requirements.*\.txt$

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  # License compliance check (custom hook)
  - repo: local
    hooks:
      - id: license-check
        name: License Compliance Check
        entry: python scripts/security/check-license-compliance.py
        language: python
        args:
          [
            --config,
            config/security/dependency-security-config.yaml,
            --reports,
            license-report-*.json,
            --fail-on-forbidden,
          ]
        files: requirements.*\.txt$
        pass_filenames: false
        additional_dependencies:
          - pyyaml>=6.0.1
          - requests>=2.31.0

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [yaml, yml]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: [--ignore=DL3008]

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: no-commit-to-branch
        args: [--branch, main, --branch, production]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--strict, --ignore-missing-imports]
        additional_dependencies:
          - types-redis
          - types-requests
          - types-pyyaml

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: tests/

  # SQL formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.0a5
    hooks:
      - id: sqlfluff-lint
      - id: sqlfluff-fix

# Configuration
default_language_version:
  python: python3.11

exclude: |
  (?x)^(
    .*/migrations/.*|
    .*/vendor/.*|
    .*/node_modules/.*|
    .*/venv/.*|
    .*\.min\..*|
    .*\.egg-info/.*
  )$

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
